{{$decl := .}}
{{$name := .Name | public}}
{{$G := .G}}
type {{$name}}{{$decl.TypeParams.LSide}} struct {
{{range .Fields}}	{{.Name|public}} {{$G.GoType .TypeExpr}} `json:"{{.SerializedName}}"`
{{end -}}
}

func New_{{$name}}{{.TypeParams.LSide}}(
{{range .Fields}}	{{.Name | lower | goEscape}} {{$G.GoType .TypeExpr}},
{{end -}}
) {{$name}}{{.TypeParams.RSide}} {
	return {{$name}}{{.TypeParams.RSide}}{
{{range .Fields}}{{$type := $G.GoType .TypeExpr}}		{{.Name | public}}: {{.Name | lower | goEscape}},
{{end}}	}
}

func Make_{{$name}}{{.TypeParams.LSide}}(
{{range .Fields}}{{if not .HasDefault}}	{{.Name | lower | goEscape}} {{$G.GoType .TypeExpr}},
{{end}}{{end -}}
) {{$name}}{{.TypeParams.RSide}} {
	ret := {{$name}}{{.TypeParams.RSide}}{
{{range .Fields}}{{$type := $G.GoType .TypeExpr}}{{if not .HasDefault}}		{{.Name | public}}: {{.Name | lower | goEscape}},
{{else}}		{{.Name | public}}: ((*{{$name}}{{$decl.TypeParams.RSide}})(nil)).Default_{{.Name}}(),
{{end}}{{- end}}	}
	return ret
}

{{range .Fields}}{{$type := $G.GoType .TypeExpr}}{{if .HasDefault}}func (*{{$decl.Name}}{{$decl.TypeParams.RSide}}) Default_{{.Name | $G.GoEscape}}() {{$type}} {
	return {{$G.GoValue .Annotations .TypeExpr .Just}}
}
{{end}}{{end}}
