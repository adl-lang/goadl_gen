-- exer01/simple_struct.adl --
module exer01.simple_struct {

struct StructOfPrimitives {
    Int32 A;
    Int64 B;
    Bool  c;
    Double d;
    String e;
};

};
-- exer01/simple_struct/StructOfPrimitives.go --
// Code generated by goadlc v1 - DO NOT EDIT.
package simple_struct

import (
	"github.com/adl-lang/goadl_rt"
)

type StructOfPrimitives struct {
	A int32   `json:"A"`
	B int64   `json:"B"`
	C bool    `json:"c"`
	D float64 `json:"d"`
	E string  `json:"e"`
}

func init() {
	goadl_rt.RESOLVER.Register(
		goadl_rt.ScopedName{
			ModuleName: "exer01.simple_struct",
			Name:       "StructOfPrimitives",
		},
		func() interface{} {
			return &StructOfPrimitives{}
		},
	)
}

-- exer01/simple_union.adl --
module exer01.simple_union {

union UnionOfPrimitives {
    Int32 A;
    Int64 B;
    Bool  c;
    Double d;
    String e;
};

};

-- exer01/simple_union/UnionOfPrimitives.go --
// Code generated by goadlc v1 - DO NOT EDIT.
package simple_union

import (
	"github.com/adl-lang/goadl_rt"
)

type UnionOfPrimitives struct {
}

func init() {
	goadl_rt.RESOLVER.Register(
		goadl_rt.ScopedName{
			ModuleName: "exer01.simple_union",
			Name:       "UnionOfPrimitives",
		},
		func() interface{} {
			return &UnionOfPrimitives{}
		},
	)
}
